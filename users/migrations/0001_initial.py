# Generated by Django 4.2.6 on 2023-11-13 13:41

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('root_id', models.CharField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=200)),
                ('key_id', models.CharField(default='', max_length=200)),
                ('access_key', models.CharField(default='', max_length=200)),
                ('aws_region', models.CharField(choices=[('us-east-1', '미국 동부(버지니아 북부)'), ('us-east-2', '미국 동부(오하이오)'), ('us-west-1', '미국 서부(캘리포니아 북부)'), ('us-west-2', '미국 서부(오리건)'), ('af-south-1', '아프리카(케이프타운)'), ('ap-east-1', '아시아 태평양(홍콩)'), ('ap-south-2', '아시아 태평양(하이데라바드)'), ('ap-southeast-3', '아시아 태평양(자카르타)'), ('ap-southeast-4', '아시아 태평양(멜버른)'), ('ap-south-1', '아시아 태평양(뭄바이)'), ('ap-northeast-3', '아시아 태평양(오사카)'), ('ap-northeast-2', '아시아 태평양(서울)'), ('ap-southeast-1', '아시아 태평양(싱가포르)'), ('ap-southeast-2', '아시아 태평양(시드니)'), ('ap-northeast-1', '아시아 태평양(도쿄)'), ('ca-central-1', '캐나다(중부)'), ('eu-central-1', '유럽(프랑크푸르트)'), ('eu-west-1', '유럽(아일랜드)'), ('eu-west-2', '유럽(런던)'), ('eu-south-1', '유럽(밀라노)'), ('eu-west-3', '유럽(파리)'), ('eu-south-2', '유럽(스페인)'), ('eu-north-1', '유럽(스톡홀름)'), ('eu-central-2', '유럽(취리히)'), ('il-central-1', '이스라엘(텔아비브)'), ('me-south-1', '중동(바레인)'), ('me-central-1', '중동(UAE)'), ('sa-east-1', '남아메리카(상파울루)')], default='ap-northeast-2', max_length=15)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
    ]
