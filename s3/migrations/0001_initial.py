# Generated by Django 4.2.6 on 2023-11-13 13:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_enum_choices.choice_builders
import django_enum_choices.fields
import django_enumfield.db.fields
import s3.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='S3',
            fields=[
                ('s3_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('last_modified', models.DateTimeField()),
                ('passed_num', models.IntegerField()),
                ('total_num', models.IntegerField()),
                ('root_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_s3', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='S3List',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_name', django_enum_choices.fields.EnumChoiceField(choice_builder=django_enum_choices.choice_builders.value_value, choices=[("('s3_check_public_access_block', <IMPORTANCE.HIGH: 0>)", "('s3_check_public_access_block', <IMPORTANCE.HIGH: 0>)"), ("('s3_check_bucket_public_access', <IMPORTANCE.HIGH: 0>)", "('s3_check_bucket_public_access', <IMPORTANCE.HIGH: 0>)"), ("('s3_check_account_level_public_access_block', <IMPORTANCE.MID: 1>)", "('s3_check_account_level_public_access_block', <IMPORTANCE.MID: 1>)"), ("('s3_check_bucket_use_acl', <IMPORTANCE.HIGH: 0>)", "('s3_check_bucket_use_acl', <IMPORTANCE.HIGH: 0>)"), ("('s3_check_bucket_encryption', <IMPORTANCE.MID: 1>)", "('s3_check_bucket_encryption', <IMPORTANCE.MID: 1>)"), ("('s3_check_bucket_mfa_delete', <IMPORTANCE.MID: 1>)", "('s3_check_bucket_mfa_delete', <IMPORTANCE.MID: 1>)"), ("('s3_check_bucket_object_lock', <IMPORTANCE.HIGH: 0>, 'S3 버킷 객체 잠금이 활성화되어 있습니다.')", "('s3_check_bucket_object_lock', <IMPORTANCE.HIGH: 0>, 'S3 버킷 객체 잠금이 활성화되어 있습니다.')"), ("('s3_check_bucket_policy', <IMPORTANCE.MID: 1>, 'S3 버킷 버킷 정책이 없습니다.')", "('s3_check_bucket_policy', <IMPORTANCE.MID: 1>, 'S3 버킷 버킷 정책이 없습니다.')"), ("('s3_check_bucket_secure_transport_policy', <IMPORTANCE.MID: 1>, 'S3 버킷 안전한 전송 정책이 있습니다.')", "('s3_check_bucket_secure_transport_policy', <IMPORTANCE.MID: 1>, 'S3 버킷 안전한 전송 정책이 있습니다.')"), ("('s3_check_ssl_endpoint', <IMPORTANCE.MID: 1>, 'S3 버킷 S3 SSL 엔드포인트를 사용하여 HTTPS를 통해 데이터를 전송할 수 있습니다.')", "('s3_check_ssl_endpoint', <IMPORTANCE.MID: 1>, 'S3 버킷 S3 SSL 엔드포인트를 사용하여 HTTPS를 통해 데이터를 전송할 수 있습니다.')"), ("('s3_check_server_side_encryption', <IMPORTANCE.MID: 1>, 'S3 버킷 x-amz-server-side-encryption(서버 측 암호화) 헤더가 포함되지 않는 경우, 객체 업로드 (S3:PutObject) 권한을 거부하고 있습니다.')", "('s3_check_server_side_encryption', <IMPORTANCE.MID: 1>, 'S3 버킷 x-amz-server-side-encryption(서버 측 암호화) 헤더가 포함되지 않는 경우, 객체 업로드 (S3:PutObject) 권한을 거부하고 있습니다.')"), ("('s3_check_bucket_versioning', <IMPORTANCE.MID: 1>, 'S3 버킷 버킷에 저장된 모든 객체 보존 및 복원이 (자동화) 되어 있습니다.')", "('s3_check_bucket_versioning', <IMPORTANCE.MID: 1>, 'S3 버킷 버킷에 저장된 모든 객체 보존 및 복원이 (자동화) 되어 있습니다.')"), ("('s3_check_bucket_acl', <IMPORTANCE.MID: 1>, 'S3 버킷 모든 S3 계정 수준에서 접근이 금지되어 있습니다.')", "('s3_check_bucket_acl', <IMPORTANCE.MID: 1>, 'S3 버킷 모든 S3 계정 수준에서 접근이 금지되어 있습니다.')")], enum_class=s3.models.S3Enum, max_length=157)),
                ('check_code', models.CharField(max_length=255)),
                ('importance', django_enumfield.db.fields.EnumField(default=1, enum=s3.models.IMPORTANCE)),
                ('status', models.BooleanField()),
                ('pass_line', models.TextField()),
                ('check_point', models.TextField()),
                ('modified_date', models.DateTimeField()),
                ('root_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='s3_list_records', to=settings.AUTH_USER_MODEL)),
                ('s3_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='s3_list_entries', to='s3.s3')),
            ],
        ),
    ]
